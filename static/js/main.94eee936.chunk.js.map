{"version":3,"sources":["componens/app-header/index.js","componens/app-header/app-header.js","componens/search-panel/index.js","componens/search-panel/search-panel.js","componens/item-status-filter/index.js","componens/item-status-filter/item-status-filter.js","componens/todo-list-item/index.js","componens/todo-list-item/todo-list-item.js","componens/todo-list/todo-list.js","componens/add-item/index.js","componens/add-item/add-item.js","componens/app/index.js","componens/app/app.js","index.js"],"names":["AppHeader","props","toDo","done","className","SearchPanel","state","term","onTermChange","e","text","target","value","setState","search","placeholder","onChange","this","Component","ItemStatusFilter","buttons","name","label","active","onToggleFilter","elements","map","ifActive","type","onClick","TodoListItem","onDeleted","onDone","onImportant","classNames","important","TodoList","todos","onDelete","item","id","itemProps","AddItem","onSubmit","preventDefault","onAdd","onLabelChange","App","firstId","todoData","createTodoItem","filter","addItem","length","newItem","deleteItem","idx","findIndex","el","slice","onToggleImportant","toggleProperty","onToggleDone","onSearchChange","array","toLowerCase","indexOf","status","arr","property","oldItem","visibleItems","doneCount","todoCount","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94eee936.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\n\nexport default AppHeader;","import React from \"react\";\nimport './app-header.css';\n\nconst AppHeader = props => {\n  const {toDo, done} = props;\n\n  return (\n    <div className='app-header d-flex'>\n      <h1>Todo list</h1>\n      <h2>{toDo} more, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;","import SearchPanel from \"./search-panel\";\n\nexport default SearchPanel;","import React, {Component} from \"react\";\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      term: ''\n    }\n\n    this.onTermChange = e => {\n      const text = e.target.value;\n\n      this.setState({term: text});\n      this.props.search(text);\n    }\n  }\n\n  render() {\n    return <input className={'search-input'}\n                  placeholder={'Search'}\n                  onChange={this.onTermChange}\n                  value={this.state.term} />;\n  }\n}","import ItemStatusFilter from \"./item-status-filter\";\n\nexport default ItemStatusFilter;","import React, { Component } from 'react';\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n  buttons = [\n    {\n      name: 'all',\n      label: 'All'\n    },\n    {\n      name: 'active',\n      label: 'Active'\n    },\n    {\n      name: 'done',\n      label: 'Done'\n    }\n  ]\n\n  render() {\n\n    const { active, onToggleFilter} = this.props;\n\n    const elements = this.buttons.map(( {label, name }) => {\n      const ifActive = active === name ? ' active' : '';\n\n      return (\n        <button type='button'\n                className={'btn btn-outline-primary' + ifActive}\n                key={name}\n                onClick={() => onToggleFilter(name)}>\n                {label}\n        </button>\n      );\n    });\n\n    return (\n      <div className='btn-group'>\n        {elements}\n      </div>\n    );\n  }\n}","import TodoListItem from \"./todo-list-item\";\n\nexport default TodoListItem;","import React, { Component } from 'react';\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n  render() {\n    const { label,\n            onDeleted,\n            onDone,\n            onImportant,\n            done,\n            important} = this.props;\n\n    let classNames = 'todo-list-item';\n\n    if (done) {\n      classNames += ' done';\n    } if (important) {\n      classNames += ' important';\n    }\n\n    return (\n      <span className={classNames}>\n        <span className='todo-list-item-label'\n          onClick={onDone}>\n          {label}\n        </span>\n\n        <button className='btn btn-outline-success btn-sm'\n          type='button'\n          onClick={onImportant}>\n          <i className='fa fa-exclamation'></i>\n        </button>\n\n        <button className='btn btn-outline-danger btn-sm'\n          type='button'\n          onClick={onDeleted}>\n          <i className='fa fa-trash-o'></i>\n        </button>\n      </span>\n    );\n  }\n}","import React from \"react\";\n\nimport TodoListItem from \"../todo-list-item\";\nimport './todo-list.css';\n\nconst TodoList = props => {\n  const { todos,\n          onDelete,\n          onImportant,\n          onDone } = props;\n\n  const elements = todos.map(item => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <li className='list-group-item'\n          key={id}>\n        <TodoListItem\n          { ...itemProps }\n          onDeleted={()=> onDelete(id)}\n          onImportant={()=>onImportant(id)}\n          onDone={()=>onDone(id)} />\n      </li>\n    );\n  });\n\n  return (\n    <ul className='todo-list list-group'>\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;","import AddItem from \"./add-item\";\n\nexport default AddItem;","import React, {Component} from 'react';\nimport './add-item.css';\n\nexport default class AddItem extends Component {\n\n  constructor() {\n    super();\n    this.state= {\n      label: ''\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.props.onAdd(this.state.label);\n      this.setState({\n        label: ''\n      });\n    };\n\n    this.onLabelChange = e => {\n      this.setState({label: e.target.value});\n    };\n  }\n\n  render() {\n    return (\n      <form className='todo-add-item'\n            onSubmit={this.onSubmit}>\n        <input className='form-control'\n               type=\"text\"\n               onChange={this.onLabelChange}\n               placeholder='Whats needs to be done'\n               value={this.state.label} />\n        <button className='btn btn-outline-secondary w-100 todo-add-item-btn'>\n                Add Item\n        </button>\n      </form>\n    );\n  };\n}","import App from './app';\n\nexport default App;","import React from 'react';\n\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport ItemStatusFilter from \"../item-status-filter\";\nimport TodoList from \"../todo-list/todo-list\";\nimport AddItem from '../add-item';\n\nimport './app.css';\n\nexport default class App extends React.Component {\n\n  firstId = 1;\n  createTodoItem(label) {\n    return {\n      label,\n      done: false,\n      important: false,\n      id: this.firstId++\n    }\n  }\n\n  toggleProperty(arr, id ,property) {\n      const idx = arr.findIndex(el => el.id === id);\n\n      const oldItem = arr[idx];\n      const newItem = {\n        ...oldItem,\n        [property]: !oldItem[property]\n      };\n\n      const newArray = [\n        ...arr.slice(0, idx),\n        newItem,\n        ...arr.slice(idx + 1)\n      ];\n\n      return newArray;\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      todoData: [\n        this.createTodoItem('Drink coffee'),\n        this.createTodoItem('Make awesome App'),\n        this.createTodoItem('Have a lunch')\n      ],\n      term: '',\n      filter: 'all' // all, , active, done\n    };\n\n    this.addItem = text => {\n      if (!text.length) {\n        return this.state.todoData;\n      }\n      \n      const newItem = this.createTodoItem(text);\n\n      this.setState(({todoData}) => {\n        const newArray = [\n          ...todoData,\n          newItem\n        ];\n\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.deleteItem = id => {\n      this.setState(({todoData}) => {\n\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArray = [\n          ...todoData.slice(0, idx),\n          ...todoData.slice(idx + 1)\n        ];\n\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({todoData})=> {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'important')\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(({todoData})=> {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'done')\n        };\n      });\n    };\n\n    this.onSearchChange = term => {\n      this.setState({term});\n    }\n\n    this.onToggleFilter = filter => {\n      this.setState({filter});\n    }\n\n    this.search = (array, term) => {\n      if (term.length === 0) {\n        return array;\n      }\n      return array.filter(item => {\n        return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n      });\n    };\n\n    this.filter = (array, status) => {\n      switch (status) {\n        case 'all':\n          return array;\n        case 'active':\n          return array.filter(item => !item.done);\n        case 'done':\n          return array.filter(item => item.done);\n        default:\n          return array;\n      }\n    }\n  }\n\n  render() {\n    const { todoData, term, filter } = this.state;\n\n    const visibleItems = this.filter(this.search(todoData, term), filter);\n\n    const doneCount = todoData.filter(item => item.done).length;\n    const todoCount = todoData.length - doneCount;\n\n    return (\n      <div className='todo-app'>\n        <AppHeader\n          toDo={todoCount}\n          done={doneCount} />\n        <div className='top-panel d-flex'>\n          <SearchPanel\n            search={this.onSearchChange}/>\n          <ItemStatusFilter\n            onToggleFilter={this.onToggleFilter}\n            active={filter} />\n        </div>\n        <TodoList\n          todos={visibleItems}\n          onDelete={this.deleteItem}\n          onImportant={this.onToggleImportant}\n          onDone={this.onToggleDone} />\n        <AddItem\n          onAdd={this.addItem} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from \"./componens/app\";\n\nReactDOM.render(<App />,\n  document.getElementById('root'));"],"sourceRoot":""}